rm(list = ls())
gc()
setwd("C:/Users/Derek.Chamberlin/Desktop/VBGF_Age_Error_Selectivity_Sims/R")
source("Functions.R")
#setup scenarios for each species
{
#Shared lifehistory params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 150, 30) #all varied params must be same legnth for surface plot
sel_2 <- 10#seq(0, 100, 5) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.04)
sample_size <- 500#c(100,500)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
n_iter <- 100
set.seed(51)
blackgill_results <- apply(blackgill_scenario, 1, run_OM, n_iter = n_iter)
blackgill_mean_vbgf_re <- mean_vbgf_re(blackgill_results, n_iter)
blackgill_results_df <- data.frame(
max_age = blackgill_scenario[, 1],
M = blackgill_scenario[, 2],
L_inf = blackgill_scenario[, 3],
k = blackgill_scenario[, 4],
t_0 = blackgill_scenario[, 5],
CV_L = blackgill_scenario[, 6],
sel_1 = blackgill_scenario[, 7],
sel_2 = blackgill_scenario[, 8],
sig_r = blackgill_scenario[, 9],
CV_Age = blackgill_scenario[, 10],
sample_size = blackgill_scenario[, 11],
mean_re_L_inf = blackgill_mean_vbgf_re[, 1],
mean_re_k = blackgill_mean_vbgf_re[, 2],
mean_re_t_0 = blackgill_mean_vbgf_re[, 3],
mean_re_CV_L = blackgill_mean_vbgf_re[, 4]
)
# Create the 3D scatter plot
plot_ly(data = blackgill_results_df,
x = ~sel_1,
y = ~sel_2,
z = ~CV_Age,
color = ~mean_re_k,
type = "scatter3d",
mode = "markers",
marker = list(size = 5, colorscale = "Viridis", showscale = FALSE)) %>%
layout(title = "3D Plot of Selectivity and CV_Age",
scene = list(
xaxis = list(title = "sel_1"),
yaxis = list(title = "sel_2"),
zaxis = list(title = "CV_Age")
))
library(plotly)
# Create the 3D scatter plot
plot_ly(data = blackgill_results_df,
x = ~sel_1,
y = ~sel_2,
z = ~CV_Age,
color = ~mean_re_k,
type = "scatter3d",
mode = "markers",
marker = list(size = 5, colorscale = "Viridis", showscale = FALSE)) %>%
layout(title = "3D Plot of Selectivity and CV_Age",
scene = list(
xaxis = list(title = "sel_1"),
yaxis = list(title = "sel_2"),
zaxis = list(title = "CV_Age")
))
