{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 40) #all varied params must be same length for surface plot
sel_2 <- 10#seq(10, 110, 10) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.02)
sample_size <- 500#c(100,500,1000)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
n_iter <- 10
set.seed(51)
blackgill_results <- apply(blackgill_scenario, 1, run_OM, n_iter = n_iter)
blackgill_mean_vbgf_re <- mean_vbgf_re(blackgill_results, n_iter)
blackgill_results_df <- data.frame(
max_age = blackgill_scenario[, 1],
M = blackgill_scenario[, 2],
L_inf = blackgill_scenario[, 3],
k = blackgill_scenario[, 4],
t_0 = blackgill_scenario[, 5],
CV_L = blackgill_scenario[, 6],
sel_1 = blackgill_scenario[, 7],
sel_2 = blackgill_scenario[, 8],
sig_r = blackgill_scenario[, 9],
CV_Age = blackgill_scenario[, 10],
sample_size = blackgill_scenario[, 11],
mean_re_L_inf = blackgill_mean_vbgf_re[, 1],
mean_re_k = blackgill_mean_vbgf_re[, 2],
mean_re_t_0 = blackgill_mean_vbgf_re[, 3],
mean_re_CV_L = blackgill_mean_vbgf_re[, 4]
)
#3-D Surface plots
surface_plot <- function(df, sample_size_n, subset_param, subset_param_value, x_param, y_param, z_param){
plot_data <- subset(df, sample_size == as.numeric(sample_size_n))
plot_data <- subset(plot_data, get(subset_param) == subset_param_value)
formula_str <- as.formula(paste0(x_param, "~", y_param, collapse = ""))
surface_data <- dcast(plot_data, sel_1 ~ CV_Age, value.var = z_param)
z_matrix <- as.matrix(surface_data[, -1])
# Create the surface plot
plot_ly(
x = surface_data[[x_param]],
y = colnames(z_matrix),  # CV_Age values as y axis labels
z = z_matrix,
type = "surface",
colorscale = "Viridis",
showscale = TRUE
) %>%
layout(scene = list(
xaxis = list(title = x_param),
yaxis = list(title = y_param),
zaxis = list(title = z_param)
)
)
}
blackgill_L_inf_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_L_inf")
library(plotly)
library(reshape2)
#3-D Surface plots
surface_plot <- function(df, sample_size_n, subset_param, subset_param_value, x_param, y_param, z_param){
plot_data <- subset(df, sample_size == as.numeric(sample_size_n))
plot_data <- subset(plot_data, get(subset_param) == subset_param_value)
formula_str <- as.formula(paste0(x_param, "~", y_param, collapse = ""))
surface_data <- dcast(plot_data, sel_1 ~ CV_Age, value.var = z_param)
z_matrix <- as.matrix(surface_data[, -1])
# Create the surface plot
plot_ly(
x = surface_data[[x_param]],
y = colnames(z_matrix),  # CV_Age values as y axis labels
z = z_matrix,
type = "surface",
colorscale = "Viridis",
showscale = TRUE
) %>%
layout(scene = list(
xaxis = list(title = x_param),
yaxis = list(title = y_param),
zaxis = list(title = z_param)
)
)
}
blackgill_L_inf_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_L_inf")
blackgill_k_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_k")
blackgill_t_0_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_t_0")
blackgill_CV_L_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_CV_L")
htmlwidgets::saveWidget(blackgill_L_inf_plot, file = "blackgill_L_inf_plot.html")
htmlwidgets::saveWidget(blackgill_k_plot, file = "blackgill_k_plot.html")
htmlwidgets::saveWidget(blackgill_t_0_plot, file = "blackgill_t_0_plot.html")
htmlwidgets::saveWidget(blackgill_CV_L_plot, file = "blackgill_CV_L_plot.html")
# Create the 3D scatter plot
plot_ly(data = subset(blackgill_results_df, sample_size == 500),
x = ~sel_1,
y = ~sel_2,
z = ~CV_Age,
#color = ~mean_re_k,
type = "scatter3d",
mode = "markers",
marker = list(color = ~mean_re_k, size = 7, colorscale = "Jet", showscale = TRUE)) %>%
layout(scene = list(
xaxis = list(title = "Selectivity 1"),
yaxis = list(title = "Selectivity 2"),
zaxis = list(title = "CV Age")
))
#setup scenarios for each species
{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 40) #all varied params must be same length for surface plot
sel_2 <- seq(10, 110, 10) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.02)
sample_size <- c(100,500,1000)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
#setup scenarios for each species
{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 40) #all varied params must be same length for surface plot
sel_2 <- seq(10, 110, 10) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.02)
sample_size <- c(100,500)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
#setup scenarios for each species
{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 80) #all varied params must be same length for surface plot
sel_2 <- seq(10, 110, 20) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.04)
sample_size <- c(100,500)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
seq(0, 400, 80)
seq(10, 110, 20)
seq(0, 0.2, 0.04)
vbgf_params_RE <- vector(length = 4)
list(vbgf_params_RE)
rm(list = ls())
gc()
setwd("C:/Users/Derek.Chamberlin/Work/Research/VBGF_Age_Error_Selectivity_Repo/R")
source("Functions.R")
#setup scenarios for each species
{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 80) #all varied params must be same length for surface plot
sel_2 <- seq(10, 110, 20) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.04)
sample_size <- c(100,500)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
n_iter <- 10
set.seed(51)
blackgill_results <- apply(blackgill_scenario, 1, run_OM, n_iter = n_iter)
#setup scenarios for each species
{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 80) #all varied params must be same length for surface plot
sel_2 <- 10#seq(10, 110, 20) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.04)
sample_size <- 500 #c(100,500)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
n_iter <- 10
set.seed(51)
blackgill_results <- apply(blackgill_scenario, 1, run_OM, n_iter = n_iter)
library(plotly)
library(reshape2)
#3-D Surface plots
surface_plot <- function(df, sample_size_n, subset_param, subset_param_value, x_param, y_param, z_param){
plot_data <- subset(df, sample_size == as.numeric(sample_size_n))
plot_data <- subset(plot_data, get(subset_param) == subset_param_value)
formula_str <- as.formula(paste0(x_param, "~", y_param, collapse = ""))
surface_data <- dcast(plot_data, sel_1 ~ CV_Age, value.var = z_param)
z_matrix <- as.matrix(surface_data[, -1])
# Create the surface plot
plot_ly(
x = surface_data[[x_param]],
y = colnames(z_matrix),  # CV_Age values as y axis labels
z = z_matrix,
type = "surface",
colorscale = "Viridis",
showscale = TRUE
) %>%
layout(scene = list(
xaxis = list(title = x_param),
yaxis = list(title = y_param),
zaxis = list(title = z_param)
)
)
}
blackgill_L_inf_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_L_inf")
function (x, ...)
UseMethod("subset")
blackgill_mean_vbgf_re <- mean_vbgf_re(blackgill_results, n_iter)
blackgill_results_df <- data.frame(
max_age = blackgill_scenario[, 1],
M = blackgill_scenario[, 2],
L_inf = blackgill_scenario[, 3],
k = blackgill_scenario[, 4],
t_0 = blackgill_scenario[, 5],
CV_L = blackgill_scenario[, 6],
sel_1 = blackgill_scenario[, 7],
sel_2 = blackgill_scenario[, 8],
sig_r = blackgill_scenario[, 9],
CV_Age = blackgill_scenario[, 10],
sample_size = blackgill_scenario[, 11],
mean_re_L_inf = blackgill_mean_vbgf_re[, 1],
mean_re_k = blackgill_mean_vbgf_re[, 2],
mean_re_t_0 = blackgill_mean_vbgf_re[, 3],
mean_re_CV_L = blackgill_mean_vbgf_re[, 4]
)
#3-D Surface plots
surface_plot <- function(df, sample_size_n, subset_param, subset_param_value, x_param, y_param, z_param){
plot_data <- subset(df, sample_size == as.numeric(sample_size_n))
plot_data <- subset(plot_data, get(subset_param) == subset_param_value)
formula_str <- as.formula(paste0(x_param, "~", y_param, collapse = ""))
surface_data <- dcast(plot_data, sel_1 ~ CV_Age, value.var = z_param)
z_matrix <- as.matrix(surface_data[, -1])
# Create the surface plot
plot_ly(
x = surface_data[[x_param]],
y = colnames(z_matrix),  # CV_Age values as y axis labels
z = z_matrix,
type = "surface",
colorscale = "Viridis",
showscale = TRUE
) %>%
layout(scene = list(
xaxis = list(title = x_param),
yaxis = list(title = y_param),
zaxis = list(title = z_param)
)
)
}
blackgill_L_inf_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_L_inf")
blackgill_k_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_k")
blackgill_t_0_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_t_0")
blackgill_CV_L_plot <- surface_plot(blackgill_results_df, 500, "sel_2", 10, "sel_1", "CV_Age", "mean_re_CV_L")
htmlwidgets::saveWidget(blackgill_L_inf_plot, file = "blackgill_L_inf_plot.html")
htmlwidgets::saveWidget(blackgill_k_plot, file = "blackgill_k_plot.html")
htmlwidgets::saveWidget(blackgill_t_0_plot, file = "blackgill_t_0_plot.html")
htmlwidgets::saveWidget(blackgill_CV_L_plot, file = "blackgill_CV_L_plot.html")
# Create the 3D scatter plot
plot_ly(data = subset(blackgill_results_df, sample_size == 500),
x = ~sel_1,
y = ~sel_2,
z = ~CV_Age,
#color = ~mean_re_k,
type = "scatter3d",
mode = "markers",
marker = list(color = ~mean_re_k, size = 7, colorscale = "Jet", showscale = TRUE)) %>%
layout(scene = list(
xaxis = list(title = "Selectivity 1"),
yaxis = list(title = "Selectivity 2"),
zaxis = list(title = "CV Age")
))
#setup scenarios for each species
{
#Shared life history params
L_inf <- 500
t_0 <- 1
CV_L <- 0.1
sel_1 <- seq(0, 400, 80) #all varied params must be same length for surface plot
sel_2 <- seq(10, 110, 20) #cope set to ~100
sig_r <- 0.6
CV_Age <- seq(0, 0.2, 0.04)
sample_size <- c(100,500)
#Create a data frames with all possible combinations
#blackgill
max_age <- 100
M <- 0.075
k <- 0.05
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blackgill_scenario <- combinations_matrix
#blue
max_age <- 50
M <- 0.15
k <- 0.09
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
blue_scenario <- combinations_matrix
#olive
max_age <- 30
M <- 0.25
k <- 0.152
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
olive_scenario <- combinations_matrix
#calico
max_age <- 10
M <- 0.5
k <- 0.303
combinations <- expand.grid(max_age, M, L_inf, k, t_0, CV_L, sel_1, sel_2, sig_r, CV_Age, sample_size)
combinations_matrix <- as.matrix(combinations)
colnames(combinations_matrix) <- c("max_age", "M", "L_inf", "k", "t_0", "CV_L", "sel_1", "sel_2", "sig_r", "CV_Age", "sample_size")
calico_scenario <- combinations_matrix
}
